import { CompositeDisposable } from 'atom';
import configSchema from './config';
import { helloWorld } from './hello-world';
<% if (pkg.additionalDependencies.includes('@atxm/metrics')) { -%>import Metrics from '@atxm/metrics';<% } %>

export default {
  config: configSchema,
  subscriptions: null,

  async activate(): Promise<void> {
    // Events subscribed to in atom's system can be easily cleaned up with a CompositeDisposable
    this.subscriptions = new CompositeDisposable();

    // Register commands
    this.subscriptions.add(
      atom.commands.add('atom-workspace', {
        '<%= pkg.name %>:hello-world': () => {
          helloWorld();
        }
      })
    );

    <%= pkg.metricsContructor %>
  },

  deactivate(): void {
    this.subscriptions?.dispose();
  }
};
